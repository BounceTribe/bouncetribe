input AddToArtistInfluenceInfluenceInput {
  artistArtistId: ID!
  influencesInfluenceId: ID!
  clientMutationId: String!
}

type AddToArtistInfluencePayload {
  viewer: Viewer!
  clientMutationId: String!
  influencesInfluence: Influence
  artistArtist: Artist
  influencesInfluenceEdge: InfluenceEdge
  artistArtistEdge: ArtistEdge
}

input AddToCommentParentChildrenCommentInput {
  childrenCommentId: ID!
  parentCommentId: ID!
  clientMutationId: String!
}

type AddToCommentParentChildrenPayload {
  viewer: Viewer!
  clientMutationId: String!
  parentComment: Comment
  childrenComment: Comment
  parentCommentEdge: CommentEdge
  childrenCommentEdge: CommentEdge
}

type AddToFriendsPayload {
  viewer: Viewer!
  clientMutationId: String!
  friends2User: User
  friends1User: User
  friends2UserEdge: UserEdge
  friends1UserEdge: UserEdge
}

input AddToFriendsUserInput {
  friends1UserId: ID!
  friends2UserId: ID!
  clientMutationId: String!
}

input AddToGenreGenreGenreInput {
  subgenresGenreId: ID!
  parentGenreGenreId: ID!
  clientMutationId: String!
}

type AddToGenreGenrePayload {
  viewer: Viewer!
  clientMutationId: String!
  parentGenreGenre: Genre
  subgenresGenre: Genre
  parentGenreGenreEdge: GenreEdge
  subgenresGenreEdge: GenreEdge
}

input AddToProjectArtProjectInput {
  artworkFileId: ID!
  artworkProjectProjectId: ID!
  clientMutationId: String!
}

type AddToProjectCommentsPayload {
  viewer: Viewer!
  clientMutationId: String!
  projectProject: Project
  commentsComment: Comment
  projectProjectEdge: ProjectEdge
  commentsCommentEdge: CommentEdge
}

input AddToProjectCommentsProjectInput {
  commentsCommentId: ID!
  projectProjectId: ID!
  clientMutationId: String!
}

type AddToProjectTracksPayload {
  viewer: Viewer!
  clientMutationId: String!
  trackProjectProject: Project
  tracksFile: File
  trackProjectProjectEdge: ProjectEdge
  tracksFileEdge: FileEdge
}

input AddToProjectTracksProjectInput {
  tracksFileId: ID!
  trackProjectProjectId: ID!
  clientMutationId: String!
}

input AddToUserCommentsCommentInput {
  authorUserId: ID!
  commentsCommentId: ID!
  clientMutationId: String!
}

type AddToUserCommentsPayload {
  viewer: Viewer!
  clientMutationId: String!
  commentsComment: Comment
  authorUser: User
  commentsCommentEdge: CommentEdge
  authorUserEdge: UserEdge
}

input AddToUserFilesFileInput {
  uploaderUserId: ID!
  filesFileId: ID!
  clientMutationId: String!
}

type AddToUserFilesPayload {
  viewer: Viewer!
  clientMutationId: String!
  filesFile: File
  uploaderUser: User
  filesFileEdge: FileEdge
  uploaderUserEdge: UserEdge
}

type AddToUserInfluencesPayload {
  viewer: Viewer!
  clientMutationId: String!
  userUser: User
  influencesInfluence: Influence
  userUserEdge: UserEdge
  influencesInfluenceEdge: InfluenceEdge
}

input AddToUserInfluencesUserInput {
  influencesInfluenceId: ID!
  userUserId: ID!
  clientMutationId: String!
}

type AddToUserInvitationsPayload {
  viewer: Viewer!
  clientMutationId: String!
  recipientUser: User
  invitationsFriendRequest: FriendRequest
  recipientUserEdge: UserEdge
  invitationsFriendRequestEdge: FriendRequestEdge
}

input AddToUserInvitationsUserInput {
  invitationsFriendRequestId: ID!
  recipientUserId: ID!
  clientMutationId: String!
}

type AddToUserProjectsPayload {
  viewer: Viewer!
  clientMutationId: String!
  creatorUser: User
  projectsProject: Project
  creatorUserEdge: UserEdge
  projectsProjectEdge: ProjectEdge
}

input AddToUserProjectsUserInput {
  projectsProjectId: ID!
  creatorUserId: ID!
  clientMutationId: String!
}

type AddToUserRequestsPayload {
  viewer: Viewer!
  clientMutationId: String!
  actorUser: User
  sentRequestsFriendRequest: FriendRequest
  actorUserEdge: UserEdge
  sentRequestsFriendRequestEdge: FriendRequestEdge
}

input AddToUserRequestsUserInput {
  sentRequestsFriendRequestId: ID!
  actorUserId: ID!
  clientMutationId: String!
}

type Artist implements Node {
  createdAt: DateTime
  id: ID!
  imageUrl: String!
  influences(filter: InfluenceFilter, orderBy: InfluenceOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): InfluenceConnection
  name: String!
  spotifyId: String!
  updatedAt: DateTime
}

# A connection to a list of items.
type ArtistConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [ArtistEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type ArtistEdge {
  # The item at the end of the edge.
  node: Artist!

  # A cursor for use in pagination.
  cursor: String!
}

input ArtistFilter {
  AND: [ArtistFilter!]
  OR: [ArtistFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  spotifyId: String
  spotifyId_not: String
  spotifyId_in: [String!]
  spotifyId_not_in: [String!]
  spotifyId_lt: String
  spotifyId_lte: String
  spotifyId_gt: String
  spotifyId_gte: String
  spotifyId_contains: String
  spotifyId_not_contains: String
  spotifyId_starts_with: String
  spotifyId_not_starts_with: String
  spotifyId_ends_with: String
  spotifyId_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  influences_every: InfluenceFilter
  influences_some: InfluenceFilter
  influences_none: InfluenceFilter
}

input ArtistinfluencesInfluence {
  userId: ID
  user: ArtistinfluencesInfluenceuserUser
}

input ArtistinfluencesInfluenceuserUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ArtistinfluencesInfluenceuserUsercommentsComment!]
  filesIds: [ID!]
  files: [ArtistinfluencesInfluenceuserUserfilesFile!]
  friendsIds: [ID!]
  friends: [ArtistinfluencesInfluenceuserUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ArtistinfluencesInfluenceuserUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ArtistinfluencesInfluenceuserUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ArtistinfluencesInfluenceuserUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ArtistinfluencesInfluenceuserUsersentRequestsFriendRequest!]
}

input ArtistinfluencesInfluenceuserUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ArtistinfluencesInfluenceuserUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ArtistinfluencesInfluenceuserUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ArtistinfluencesInfluenceuserUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input ArtistinfluencesInfluenceuserUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ArtistinfluencesInfluenceuserUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ArtistinfluencesInfluenceuserUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

enum ArtistOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  name_ASC
  name_DESC
  spotifyId_ASC
  spotifyId_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input AUTH_PROVIDER_AUTH0 {
  # Is returned when calling any of the Auth0 functions which invoke
  # authentication. This includes calls to the Lock widget, to the auth0.js
  # library, or the libraries for other languages. See
  # https://auth0.com/docs/tokens/id_token for more detail
  idToken: String!
}

input AuthProviderSignupData {
  auth0: AUTH_PROVIDER_AUTH0
}

# The `BigDecimal` scalar type represents signed fractional values with arbitrary precision.
scalar BigDecimal

# The `BigInt` scalar type represents non-fractional signed whole numeric values. BigInt can represent arbitrary big values.
scalar BigInt

type Comment implements Node {
  author(filter: UserFilter): User
  children(filter: CommentFilter, orderBy: CommentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection
  createdAt: DateTime
  id: ID!
  parent(filter: CommentFilter): Comment
  project(filter: ProjectFilter): Project
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  updatedAt: DateTime
}

input CommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [CommentauthorUsercommentsComment!]
  filesIds: [ID!]
  files: [CommentauthorUserfilesFile!]
  friendsIds: [ID!]
  friends: [CommentauthorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [CommentauthorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [CommentauthorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [CommentauthorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [CommentauthorUsersentRequestsFriendRequest!]
}

input CommentauthorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: CommentauthorUsercommentsCommentparentComment
  projectId: ID
  project: CommentauthorUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [CommentauthorUsercommentsCommentchildrenComment!]
}

input CommentauthorUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentauthorUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentauthorUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentauthorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: CommentauthorUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: CommentauthorUserfilesFiletrackProjectProject
}

input CommentauthorUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentauthorUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentauthorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [CommentauthorUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [CommentauthorUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [CommentauthorUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [CommentauthorUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [CommentauthorUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [CommentauthorUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [CommentauthorUserfriendsUsersentRequestsFriendRequest!]
}

input CommentauthorUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentauthorUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentauthorUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentauthorUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input CommentauthorUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentauthorUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentauthorUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentauthorUserinfluencesInfluence {
  artistId: ID
  artist: CommentauthorUserinfluencesInfluenceartistArtist
}

input CommentauthorUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input CommentauthorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: CommentauthorUserinvitationsFriendRequestactorUser
}

input CommentauthorUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentauthorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: CommentauthorUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [CommentauthorUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [CommentauthorUserprojectsProjecttracksFile!]
}

input CommentauthorUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentauthorUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentauthorUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentauthorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: CommentauthorUsersentRequestsFriendRequestrecipientUser
}

input CommentauthorUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentchildrenCommentauthorUser
  projectId: ID
  project: CommentchildrenCommentprojectProject
  childrenIds: [ID!]
  children: [CommentchildrenCommentchildrenComment!]
}

input CommentchildrenCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [CommentchildrenCommentauthorUsercommentsComment!]
  filesIds: [ID!]
  files: [CommentchildrenCommentauthorUserfilesFile!]
  friendsIds: [ID!]
  friends: [CommentchildrenCommentauthorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [CommentchildrenCommentauthorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [CommentchildrenCommentauthorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [CommentchildrenCommentauthorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [CommentchildrenCommentauthorUsersentRequestsFriendRequest!]
}

input CommentchildrenCommentauthorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentchildrenCommentauthorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentchildrenCommentauthorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentchildrenCommentauthorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input CommentchildrenCommentauthorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentchildrenCommentauthorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentchildrenCommentauthorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentchildrenCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentchildrenCommentchildrenCommentauthorUser
  projectId: ID
  project: CommentchildrenCommentchildrenCommentprojectProject
  childrenIds: [ID!]
  children: [CommentchildrenCommentchildrenCommentchildrenComment!]
}

input CommentchildrenCommentchildrenCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentchildrenCommentchildrenCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentchildrenCommentchildrenCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentchildrenCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: CommentchildrenCommentprojectProjectartworkFile
  creatorId: ID
  creator: CommentchildrenCommentprojectProjectcreatorUser
  commentsIds: [ID!]
  comments: [CommentchildrenCommentprojectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [CommentchildrenCommentprojectProjecttracksFile!]
}

input CommentchildrenCommentprojectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentchildrenCommentprojectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentchildrenCommentprojectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentchildrenCommentprojectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

# A connection to a list of items.
type CommentConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [CommentEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type CommentEdge {
  # The item at the end of the edge.
  node: Comment!

  # A cursor for use in pagination.
  cursor: String!
}

input CommentFilter {
  AND: [CommentFilter!]
  OR: [CommentFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
  timestampEnd: BigDecimal
  timestampEnd_not: BigDecimal
  timestampEnd_in: [BigDecimal!]
  timestampEnd_not_in: [BigDecimal!]
  timestampEnd_lt: BigDecimal
  timestampEnd_lte: BigDecimal
  timestampEnd_gt: BigDecimal
  timestampEnd_gte: BigDecimal
  timestampStart: BigDecimal
  timestampStart_not: BigDecimal
  timestampStart_in: [BigDecimal!]
  timestampStart_not_in: [BigDecimal!]
  timestampStart_lt: BigDecimal
  timestampStart_lte: BigDecimal
  timestampStart_gt: BigDecimal
  timestampStart_gte: BigDecimal
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  author: UserFilter
  children_every: CommentFilter
  children_some: CommentFilter
  children_none: CommentFilter
  parent: CommentFilter
  project: ProjectFilter
}

enum CommentOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  timestampEnd_ASC
  timestampEnd_DESC
  timestampStart_ASC
  timestampStart_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentparentCommentauthorUser
  projectId: ID
  project: CommentparentCommentprojectProject
  childrenIds: [ID!]
  children: [CommentparentCommentchildrenComment!]
}

input CommentparentCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [CommentparentCommentauthorUsercommentsComment!]
  filesIds: [ID!]
  files: [CommentparentCommentauthorUserfilesFile!]
  friendsIds: [ID!]
  friends: [CommentparentCommentauthorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [CommentparentCommentauthorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [CommentparentCommentauthorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [CommentparentCommentauthorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [CommentparentCommentauthorUsersentRequestsFriendRequest!]
}

input CommentparentCommentauthorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentparentCommentauthorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentparentCommentauthorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentparentCommentauthorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input CommentparentCommentauthorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentparentCommentauthorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentparentCommentauthorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentparentCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentparentCommentchildrenCommentauthorUser
  projectId: ID
  project: CommentparentCommentchildrenCommentprojectProject
  childrenIds: [ID!]
  children: [CommentparentCommentchildrenCommentchildrenComment!]
}

input CommentparentCommentchildrenCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentparentCommentchildrenCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentparentCommentchildrenCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentparentCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: CommentparentCommentprojectProjectartworkFile
  creatorId: ID
  creator: CommentparentCommentprojectProjectcreatorUser
  commentsIds: [ID!]
  comments: [CommentparentCommentprojectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [CommentparentCommentprojectProjecttracksFile!]
}

input CommentparentCommentprojectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentparentCommentprojectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentparentCommentprojectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentparentCommentprojectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: CommentprojectProjectartworkFile
  creatorId: ID
  creator: CommentprojectProjectcreatorUser
  commentsIds: [ID!]
  comments: [CommentprojectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [CommentprojectProjecttracksFile!]
}

input CommentprojectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  trackProjectId: ID
  trackProject: CommentprojectProjectartworkFiletrackProjectProject
  uploaderId: ID
  uploader: CommentprojectProjectartworkFileuploaderUser
}

input CommentprojectProjectartworkFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentprojectProjectartworkFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentprojectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentprojectProjectcommentsCommentauthorUser
  parentId: ID
  parent: CommentprojectProjectcommentsCommentparentComment
  childrenIds: [ID!]
  children: [CommentprojectProjectcommentsCommentchildrenComment!]
}

input CommentprojectProjectcommentsCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentprojectProjectcommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentprojectProjectcommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentprojectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [CommentprojectProjectcreatorUsercommentsComment!]
  filesIds: [ID!]
  files: [CommentprojectProjectcreatorUserfilesFile!]
  friendsIds: [ID!]
  friends: [CommentprojectProjectcreatorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [CommentprojectProjectcreatorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [CommentprojectProjectcreatorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [CommentprojectProjectcreatorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [CommentprojectProjectcreatorUsersentRequestsFriendRequest!]
}

input CommentprojectProjectcreatorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input CommentprojectProjectcreatorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input CommentprojectProjectcreatorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CommentprojectProjectcreatorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input CommentprojectProjectcreatorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentprojectProjectcreatorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentprojectProjectcreatorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input CommentprojectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: CommentprojectProjecttracksFileartworkProjectProject
  uploaderId: ID
  uploader: CommentprojectProjecttracksFileuploaderUser
}

input CommentprojectProjecttracksFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input CommentprojectProjecttracksFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input CreateArtistInput {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
  influences: [ArtistinfluencesInfluence!]
  clientMutationId: String!
}

type CreateArtistPayload {
  viewer: Viewer!
  clientMutationId: String!
  artist: Artist
  edge: ArtistEdge
}

input CreateCommentInput {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: CommentauthorUser
  parentId: ID
  parent: CommentparentComment
  projectId: ID
  project: CommentprojectProject
  childrenIds: [ID!]
  children: [CommentchildrenComment!]
  clientMutationId: String!
}

type CreateCommentPayload {
  viewer: Viewer!
  clientMutationId: String!
  comment: Comment
  edge: CommentEdge
  author: User
  parent: Comment
  project: Project
}

input CreateFileInput {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FileartworkProjectProject
  trackProjectId: ID
  trackProject: FiletrackProjectProject
  uploaderId: ID
  uploader: FileuploaderUser
  clientMutationId: String!
}

type CreateFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
  artworkProject: Project
  trackProject: Project
  uploader: User
}

input CreateFriendRequestInput {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: FriendRequestactorUser
  recipientId: ID
  recipient: FriendRequestrecipientUser
  clientMutationId: String!
}

type CreateFriendRequestPayload {
  viewer: Viewer!
  clientMutationId: String!
  friendRequest: FriendRequest
  edge: FriendRequestEdge
  actor: User
  recipient: User
}

input CreateGenreInput {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenresubgenresGenre!]
  clientMutationId: String!
}

type CreateGenrePayload {
  viewer: Viewer!
  clientMutationId: String!
  genre: Genre
  edge: GenreEdge
}

input CreateInfluenceInput {
  artistId: ID
  artist: InfluenceartistArtist
  userId: ID
  user: InfluenceuserUser
  clientMutationId: String!
}

type CreateInfluencePayload {
  viewer: Viewer!
  clientMutationId: String!
  influence: Influence
  edge: InfluenceEdge
  artist: Artist
  user: User
}

input CreateProjectInput {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: ProjectartworkFile
  creatorId: ID
  creator: ProjectcreatorUser
  commentsIds: [ID!]
  comments: [ProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [ProjecttracksFile!]
  clientMutationId: String!
}

type CreateProjectPayload {
  viewer: Viewer!
  clientMutationId: String!
  project: Project
  edge: ProjectEdge
  artwork: File
  creator: User
}

input CreateTagInput {
  clientMutationId: String!
}

type CreateTagPayload {
  viewer: Viewer!
  clientMutationId: String!
  tag: Tag
  edge: TagEdge
}

# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.
type CreateUserPayload {
  user: User
  clientMutationId: String
  viewer: Viewer!
}

scalar DateTime

input DeleteArtistInput {
  id: ID!
  clientMutationId: String!
}

type DeleteArtistPayload {
  viewer: Viewer!
  clientMutationId: String!
  artist: Artist
  edge: ArtistEdge
  deletedId: ID
}

input DeleteCommentInput {
  id: ID!
  clientMutationId: String!
}

type DeleteCommentPayload {
  viewer: Viewer!
  clientMutationId: String!
  comment: Comment
  edge: CommentEdge
  author: User
  parent: Comment
  project: Project
  deletedId: ID
}

input DeleteFileInput {
  id: ID!
  clientMutationId: String!
}

type DeleteFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
  artworkProject: Project
  trackProject: Project
  uploader: User
  deletedId: ID
}

input DeleteFriendRequestInput {
  id: ID!
  clientMutationId: String!
}

type DeleteFriendRequestPayload {
  viewer: Viewer!
  clientMutationId: String!
  friendRequest: FriendRequest
  edge: FriendRequestEdge
  actor: User
  recipient: User
  deletedId: ID
}

input DeleteGenreInput {
  id: ID!
  clientMutationId: String!
}

type DeleteGenrePayload {
  viewer: Viewer!
  clientMutationId: String!
  genre: Genre
  edge: GenreEdge
  deletedId: ID
}

input DeleteInfluenceInput {
  id: ID!
  clientMutationId: String!
}

type DeleteInfluencePayload {
  viewer: Viewer!
  clientMutationId: String!
  influence: Influence
  edge: InfluenceEdge
  artist: Artist
  user: User
  deletedId: ID
}

input DeleteProjectInput {
  id: ID!
  clientMutationId: String!
}

type DeleteProjectPayload {
  viewer: Viewer!
  clientMutationId: String!
  project: Project
  edge: ProjectEdge
  artwork: File
  creator: User
  deletedId: ID
}

input DeleteTagInput {
  id: ID!
  clientMutationId: String!
}

type DeleteTagPayload {
  viewer: Viewer!
  clientMutationId: String!
  tag: Tag
  edge: TagEdge
  deletedId: ID
}

input DeleteUserInput {
  id: ID!
  clientMutationId: String!
}

type DeleteUserPayload {
  viewer: Viewer!
  clientMutationId: String!
  user: User
  edge: UserEdge
  deletedId: ID
}

type File implements Node {
  artworkProject(filter: ProjectFilter): Project
  contentType: String!
  createdAt: DateTime
  id: ID!
  name: String!
  secret: String!
  size: Int!
  trackProject(filter: ProjectFilter): Project
  updatedAt: DateTime
  uploader(filter: UserFilter): User
  url: String!
  visualization: [BigDecimal!]
}

input FileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  creatorId: ID
  creator: FileartworkProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [FileartworkProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [FileartworkProjectProjecttracksFile!]
}

input FileartworkProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: FileartworkProjectProjectcommentsCommentauthorUser
  parentId: ID
  parent: FileartworkProjectProjectcommentsCommentparentComment
  childrenIds: [ID!]
  children: [FileartworkProjectProjectcommentsCommentchildrenComment!]
}

input FileartworkProjectProjectcommentsCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FileartworkProjectProjectcommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileartworkProjectProjectcommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileartworkProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FileartworkProjectProjectcreatorUsercommentsComment!]
  filesIds: [ID!]
  files: [FileartworkProjectProjectcreatorUserfilesFile!]
  friendsIds: [ID!]
  friends: [FileartworkProjectProjectcreatorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FileartworkProjectProjectcreatorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FileartworkProjectProjectcreatorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FileartworkProjectProjectcreatorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FileartworkProjectProjectcreatorUsersentRequestsFriendRequest!]
}

input FileartworkProjectProjectcreatorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileartworkProjectProjectcreatorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FileartworkProjectProjectcreatorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FileartworkProjectProjectcreatorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input FileartworkProjectProjectcreatorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FileartworkProjectProjectcreatorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FileartworkProjectProjectcreatorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FileartworkProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  uploaderId: ID
  uploader: FileartworkProjectProjecttracksFileuploaderUser
}

input FileartworkProjectProjecttracksFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

# A connection to a list of items.
type FileConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [FileEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type FileEdge {
  # The item at the end of the edge.
  node: File!

  # A cursor for use in pagination.
  cursor: String!
}

input FileFilter {
  AND: [FileFilter!]
  OR: [FileFilter!]
  contentType: String
  contentType_not: String
  contentType_in: [String!]
  contentType_not_in: [String!]
  contentType_lt: String
  contentType_lte: String
  contentType_gt: String
  contentType_gte: String
  contentType_contains: String
  contentType_not_contains: String
  contentType_starts_with: String
  contentType_not_starts_with: String
  contentType_ends_with: String
  contentType_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  secret: String
  secret_not: String
  secret_in: [String!]
  secret_not_in: [String!]
  secret_lt: String
  secret_lte: String
  secret_gt: String
  secret_gte: String
  secret_contains: String
  secret_not_contains: String
  secret_starts_with: String
  secret_not_starts_with: String
  secret_ends_with: String
  secret_not_ends_with: String
  size: Int
  size_not: Int
  size_in: [Int!]
  size_not_in: [Int!]
  size_lt: Int
  size_lte: Int
  size_gt: Int
  size_gte: Int
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  artworkProject: ProjectFilter
  trackProject: ProjectFilter
  uploader: UserFilter
}

enum FileOrderBy {
  contentType_ASC
  contentType_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  secret_ASC
  secret_DESC
  size_ASC
  size_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input FiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: FiletrackProjectProjectartworkFile
  creatorId: ID
  creator: FiletrackProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [FiletrackProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [FiletrackProjectProjecttracksFile!]
}

input FiletrackProjectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  uploaderId: ID
  uploader: FiletrackProjectProjectartworkFileuploaderUser
}

input FiletrackProjectProjectartworkFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FiletrackProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: FiletrackProjectProjectcommentsCommentauthorUser
  parentId: ID
  parent: FiletrackProjectProjectcommentsCommentparentComment
  childrenIds: [ID!]
  children: [FiletrackProjectProjectcommentsCommentchildrenComment!]
}

input FiletrackProjectProjectcommentsCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FiletrackProjectProjectcommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FiletrackProjectProjectcommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FiletrackProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FiletrackProjectProjectcreatorUsercommentsComment!]
  filesIds: [ID!]
  files: [FiletrackProjectProjectcreatorUserfilesFile!]
  friendsIds: [ID!]
  friends: [FiletrackProjectProjectcreatorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FiletrackProjectProjectcreatorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FiletrackProjectProjectcreatorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FiletrackProjectProjectcreatorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FiletrackProjectProjectcreatorUsersentRequestsFriendRequest!]
}

input FiletrackProjectProjectcreatorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FiletrackProjectProjectcreatorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FiletrackProjectProjectcreatorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FiletrackProjectProjectcreatorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input FiletrackProjectProjectcreatorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FiletrackProjectProjectcreatorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FiletrackProjectProjectcreatorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FiletrackProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FiletrackProjectProjecttracksFileartworkProjectProject
  uploaderId: ID
  uploader: FiletrackProjectProjecttracksFileuploaderUser
}

input FiletrackProjectProjecttracksFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FiletrackProjectProjecttracksFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FileuploaderUsercommentsComment!]
  filesIds: [ID!]
  files: [FileuploaderUserfilesFile!]
  friendsIds: [ID!]
  friends: [FileuploaderUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FileuploaderUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FileuploaderUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FileuploaderUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FileuploaderUsersentRequestsFriendRequest!]
}

input FileuploaderUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: FileuploaderUsercommentsCommentparentComment
  projectId: ID
  project: FileuploaderUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [FileuploaderUsercommentsCommentchildrenComment!]
}

input FileuploaderUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileuploaderUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileuploaderUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FileuploaderUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FileuploaderUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: FileuploaderUserfilesFiletrackProjectProject
}

input FileuploaderUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FileuploaderUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FileuploaderUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FileuploaderUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [FileuploaderUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [FileuploaderUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FileuploaderUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FileuploaderUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FileuploaderUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FileuploaderUserfriendsUsersentRequestsFriendRequest!]
}

input FileuploaderUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileuploaderUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FileuploaderUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FileuploaderUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input FileuploaderUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FileuploaderUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FileuploaderUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FileuploaderUserinfluencesInfluence {
  artistId: ID
  artist: FileuploaderUserinfluencesInfluenceartistArtist
}

input FileuploaderUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input FileuploaderUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: FileuploaderUserinvitationsFriendRequestactorUser
}

input FileuploaderUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FileuploaderUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: FileuploaderUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [FileuploaderUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [FileuploaderUserprojectsProjecttracksFile!]
}

input FileuploaderUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FileuploaderUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FileuploaderUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FileuploaderUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: FileuploaderUsersentRequestsFriendRequestrecipientUser
}

input FileuploaderUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

type FriendRequest implements Node {
  accepted: Boolean!
  actor(filter: UserFilter): User
  createdAt: DateTime
  id: ID!
  ignored: Boolean!
  recipient(filter: UserFilter): User
  updatedAt: DateTime
}

input FriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FriendRequestactorUsercommentsComment!]
  filesIds: [ID!]
  files: [FriendRequestactorUserfilesFile!]
  friendsIds: [ID!]
  friends: [FriendRequestactorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FriendRequestactorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FriendRequestactorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FriendRequestactorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FriendRequestactorUsersentRequestsFriendRequest!]
}

input FriendRequestactorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: FriendRequestactorUsercommentsCommentparentComment
  projectId: ID
  project: FriendRequestactorUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [FriendRequestactorUsercommentsCommentchildrenComment!]
}

input FriendRequestactorUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestactorUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestactorUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestactorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FriendRequestactorUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: FriendRequestactorUserfilesFiletrackProjectProject
}

input FriendRequestactorUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestactorUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestactorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FriendRequestactorUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [FriendRequestactorUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [FriendRequestactorUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FriendRequestactorUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FriendRequestactorUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FriendRequestactorUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FriendRequestactorUserfriendsUsersentRequestsFriendRequest!]
}

input FriendRequestactorUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestactorUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestactorUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FriendRequestactorUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input FriendRequestactorUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FriendRequestactorUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestactorUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FriendRequestactorUserinfluencesInfluence {
  artistId: ID
  artist: FriendRequestactorUserinfluencesInfluenceartistArtist
}

input FriendRequestactorUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input FriendRequestactorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
}

input FriendRequestactorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: FriendRequestactorUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [FriendRequestactorUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [FriendRequestactorUserprojectsProjecttracksFile!]
}

input FriendRequestactorUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestactorUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestactorUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestactorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: FriendRequestactorUsersentRequestsFriendRequestrecipientUser
}

input FriendRequestactorUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

# A connection to a list of items.
type FriendRequestConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [FriendRequestEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type FriendRequestEdge {
  # The item at the end of the edge.
  node: FriendRequest!

  # A cursor for use in pagination.
  cursor: String!
}

input FriendRequestFilter {
  AND: [FriendRequestFilter!]
  OR: [FriendRequestFilter!]
  accepted: Boolean
  accepted_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  ignored: Boolean
  ignored_not: Boolean
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  actor: UserFilter
  recipient: UserFilter
}

enum FriendRequestOrderBy {
  accepted_ASC
  accepted_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  ignored_ASC
  ignored_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input FriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FriendRequestrecipientUsercommentsComment!]
  filesIds: [ID!]
  files: [FriendRequestrecipientUserfilesFile!]
  friendsIds: [ID!]
  friends: [FriendRequestrecipientUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FriendRequestrecipientUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FriendRequestrecipientUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FriendRequestrecipientUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FriendRequestrecipientUsersentRequestsFriendRequest!]
}

input FriendRequestrecipientUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: FriendRequestrecipientUsercommentsCommentparentComment
  projectId: ID
  project: FriendRequestrecipientUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [FriendRequestrecipientUsercommentsCommentchildrenComment!]
}

input FriendRequestrecipientUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestrecipientUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestrecipientUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestrecipientUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FriendRequestrecipientUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: FriendRequestrecipientUserfilesFiletrackProjectProject
}

input FriendRequestrecipientUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestrecipientUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestrecipientUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [FriendRequestrecipientUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [FriendRequestrecipientUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [FriendRequestrecipientUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [FriendRequestrecipientUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [FriendRequestrecipientUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [FriendRequestrecipientUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [FriendRequestrecipientUserfriendsUsersentRequestsFriendRequest!]
}

input FriendRequestrecipientUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestrecipientUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestrecipientUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FriendRequestrecipientUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input FriendRequestrecipientUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FriendRequestrecipientUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input FriendRequestrecipientUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input FriendRequestrecipientUserinfluencesInfluence {
  artistId: ID
  artist: FriendRequestrecipientUserinfluencesInfluenceartistArtist
}

input FriendRequestrecipientUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input FriendRequestrecipientUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: FriendRequestrecipientUserinvitationsFriendRequestactorUser
}

input FriendRequestrecipientUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input FriendRequestrecipientUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: FriendRequestrecipientUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [FriendRequestrecipientUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [FriendRequestrecipientUserprojectsProjecttracksFile!]
}

input FriendRequestrecipientUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestrecipientUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input FriendRequestrecipientUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input FriendRequestrecipientUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
}

type Genre implements Node {
  createdAt: DateTime
  id: ID!
  name: String!
  parentGenre(filter: GenreFilter, orderBy: GenreOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): GenreConnection
  subgenres(filter: GenreFilter, orderBy: GenreOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): GenreConnection
  updatedAt: DateTime
}

# A connection to a list of items.
type GenreConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [GenreEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type GenreEdge {
  # The item at the end of the edge.
  node: Genre!

  # A cursor for use in pagination.
  cursor: String!
}

input GenreFilter {
  AND: [GenreFilter!]
  OR: [GenreFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  parentGenre_every: GenreFilter
  parentGenre_some: GenreFilter
  parentGenre_none: GenreFilter
  subgenres_every: GenreFilter
  subgenres_some: GenreFilter
  subgenres_none: GenreFilter
}

enum GenreOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input GenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenreparentGenreGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenreparentGenreGenresubgenresGenre!]
}

input GenreparentGenreGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenreparentGenreGenreparentGenreGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenreparentGenreGenreparentGenreGenresubgenresGenre!]
}

input GenreparentGenreGenreparentGenreGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenreparentGenreGenreparentGenreGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenreparentGenreGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenreparentGenreGenresubgenresGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenreparentGenreGenresubgenresGenresubgenresGenre!]
}

input GenreparentGenreGenresubgenresGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenreparentGenreGenresubgenresGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenresubgenresGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenresubgenresGenresubgenresGenre!]
}

input GenresubgenresGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenresubgenresGenreparentGenreGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenresubgenresGenreparentGenreGenresubgenresGenre!]
}

input GenresubgenresGenreparentGenreGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenresubgenresGenreparentGenreGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenresubgenresGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  parentGenre: [GenresubgenresGenresubgenresGenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenresubgenresGenresubgenresGenresubgenresGenre!]
}

input GenresubgenresGenresubgenresGenreparentGenreGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

input GenresubgenresGenresubgenresGenresubgenresGenre {
  name: String!
  parentGenreIds: [ID!]
  subgenresIds: [ID!]
}

type Influence implements Node {
  artist(filter: ArtistFilter): Artist
  createdAt: DateTime
  id: ID!
  updatedAt: DateTime
  user(filter: UserFilter): User
}

input InfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
  influences: [InfluenceartistArtistinfluencesInfluence!]
}

input InfluenceartistArtistinfluencesInfluence {
  userId: ID
  user: InfluenceartistArtistinfluencesInfluenceuserUser
}

input InfluenceartistArtistinfluencesInfluenceuserUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

# A connection to a list of items.
type InfluenceConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [InfluenceEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type InfluenceEdge {
  # The item at the end of the edge.
  node: Influence!

  # A cursor for use in pagination.
  cursor: String!
}

input InfluenceFilter {
  AND: [InfluenceFilter!]
  OR: [InfluenceFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  artist: ArtistFilter
  user: UserFilter
}

enum InfluenceOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input InfluenceuserUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [InfluenceuserUsercommentsComment!]
  filesIds: [ID!]
  files: [InfluenceuserUserfilesFile!]
  friendsIds: [ID!]
  friends: [InfluenceuserUserfriendsUser!]
  influencesIds: [ID!]
  influences: [InfluenceuserUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [InfluenceuserUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [InfluenceuserUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [InfluenceuserUsersentRequestsFriendRequest!]
}

input InfluenceuserUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: InfluenceuserUsercommentsCommentparentComment
  projectId: ID
  project: InfluenceuserUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [InfluenceuserUsercommentsCommentchildrenComment!]
}

input InfluenceuserUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input InfluenceuserUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input InfluenceuserUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input InfluenceuserUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: InfluenceuserUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: InfluenceuserUserfilesFiletrackProjectProject
}

input InfluenceuserUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input InfluenceuserUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input InfluenceuserUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [InfluenceuserUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [InfluenceuserUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [InfluenceuserUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [InfluenceuserUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [InfluenceuserUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [InfluenceuserUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [InfluenceuserUserfriendsUsersentRequestsFriendRequest!]
}

input InfluenceuserUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input InfluenceuserUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input InfluenceuserUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input InfluenceuserUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input InfluenceuserUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input InfluenceuserUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input InfluenceuserUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input InfluenceuserUserinfluencesInfluence {
  artistId: ID
  artist: InfluenceuserUserinfluencesInfluenceartistArtist
}

input InfluenceuserUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input InfluenceuserUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: InfluenceuserUserinvitationsFriendRequestactorUser
}

input InfluenceuserUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input InfluenceuserUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: InfluenceuserUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [InfluenceuserUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [InfluenceuserUserprojectsProjecttracksFile!]
}

input InfluenceuserUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input InfluenceuserUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input InfluenceuserUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input InfluenceuserUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: InfluenceuserUsersentRequestsFriendRequestrecipientUser
}

input InfluenceuserUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

# The `Long` scalar type represents non-fractional signed whole numeric values.
# Long can represent values between -(2^63) and 2^63 - 1.
scalar Long

type Mutation {
  createProject(input: CreateProjectInput!): CreateProjectPayload
  createInfluence(input: CreateInfluenceInput!): CreateInfluencePayload
  createComment(input: CreateCommentInput!): CreateCommentPayload
  createFriendRequest(input: CreateFriendRequestInput!): CreateFriendRequestPayload
  createGenre(input: CreateGenreInput!): CreateGenrePayload
  createArtist(input: CreateArtistInput!): CreateArtistPayload
  createTag(input: CreateTagInput!): CreateTagPayload
  createFile(input: CreateFileInput!): CreateFilePayload
  updateProject(input: UpdateProjectInput!): UpdateProjectPayload
  updateInfluence(input: UpdateInfluenceInput!): UpdateInfluencePayload
  updateComment(input: UpdateCommentInput!): UpdateCommentPayload
  updateUser(input: UpdateUserInput!): UpdateUserPayload
  updateFriendRequest(input: UpdateFriendRequestInput!): UpdateFriendRequestPayload
  updateGenre(input: UpdateGenreInput!): UpdateGenrePayload
  updateArtist(input: UpdateArtistInput!): UpdateArtistPayload
  updateTag(input: UpdateTagInput!): UpdateTagPayload
  updateFile(input: UpdateFileInput!): UpdateFilePayload
  deleteProject(input: DeleteProjectInput!): DeleteProjectPayload
  deleteInfluence(input: DeleteInfluenceInput!): DeleteInfluencePayload
  deleteComment(input: DeleteCommentInput!): DeleteCommentPayload
  deleteUser(input: DeleteUserInput!): DeleteUserPayload
  deleteFriendRequest(input: DeleteFriendRequestInput!): DeleteFriendRequestPayload
  deleteGenre(input: DeleteGenreInput!): DeleteGenrePayload
  deleteArtist(input: DeleteArtistInput!): DeleteArtistPayload
  deleteTag(input: DeleteTagInput!): DeleteTagPayload
  deleteFile(input: DeleteFileInput!): DeleteFilePayload
  setProjectArt(input: AddToProjectArtProjectInput!): SetProjectArtPayload
  unsetProjectArt(input: UnsetProjectArtProjectInput!): UnsetProjectArtPayload
  addToUserComments(input: AddToUserCommentsCommentInput!): AddToUserCommentsPayload
  addToGenreGenre(input: AddToGenreGenreGenreInput!): AddToGenreGenrePayload
  addToProjectComments(input: AddToProjectCommentsProjectInput!): AddToProjectCommentsPayload
  addToUserInfluences(input: AddToUserInfluencesUserInput!): AddToUserInfluencesPayload
  addToProjectTracks(input: AddToProjectTracksProjectInput!): AddToProjectTracksPayload
  addToFriends(input: AddToFriendsUserInput!): AddToFriendsPayload
  addToUserFiles(input: AddToUserFilesFileInput!): AddToUserFilesPayload
  addToArtistInfluence(input: AddToArtistInfluenceInfluenceInput!): AddToArtistInfluencePayload
  addToUserInvitations(input: AddToUserInvitationsUserInput!): AddToUserInvitationsPayload
  addToUserProjects(input: AddToUserProjectsUserInput!): AddToUserProjectsPayload
  addToCommentParentChildren(input: AddToCommentParentChildrenCommentInput!): AddToCommentParentChildrenPayload
  addToUserRequests(input: AddToUserRequestsUserInput!): AddToUserRequestsPayload
  removeFromUserComments(input: RemoveFromUserCommentsCommentInput!): RemoveFromUserCommentsPayload
  removeFromGenreGenre(input: RemoveFromGenreGenreGenreInput!): RemoveFromGenreGenrePayload
  removeFromProjectComments(input: RemoveFromProjectCommentsProjectInput!): RemoveFromProjectCommentsPayload
  removeFromUserInfluences(input: RemoveFromUserInfluencesUserInput!): RemoveFromUserInfluencesPayload
  removeFromProjectTracks(input: RemoveFromProjectTracksProjectInput!): RemoveFromProjectTracksPayload
  removeFromFriends(input: RemoveFromFriendsUserInput!): RemoveFromFriendsPayload
  removeFromUserFiles(input: RemoveFromUserFilesFileInput!): RemoveFromUserFilesPayload
  removeFromArtistInfluence(input: RemoveFromArtistInfluenceInfluenceInput!): RemoveFromArtistInfluencePayload
  removeFromUserInvitations(input: RemoveFromUserInvitationsUserInput!): RemoveFromUserInvitationsPayload
  removeFromUserProjects(input: RemoveFromUserProjectsUserInput!): RemoveFromUserProjectsPayload
  removeFromCommentParentChildren(input: RemoveFromCommentParentChildrenCommentInput!): RemoveFromCommentParentChildrenPayload
  removeFromUserRequests(input: RemoveFromUserRequestsUserInput!): RemoveFromUserRequestsPayload
  signinUser(input: SigninUserInput!): SigninPayload!
  createUser(input: SignupUserInput!): CreateUserPayload!
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

type Project implements Node {
  artwork(filter: FileFilter): File
  comments(filter: CommentFilter, orderBy: CommentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection
  createdAt: DateTime
  creator(filter: UserFilter): User
  description: String
  genre: [PROJECT_GENRE!]
  id: ID!
  new: Boolean!
  privacy: PROJECT_PRIVACY!
  title: String!
  tracks(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection
  updatedAt: DateTime
}

enum PROJECT_GENRE {
  ROCK
  JAZZ
}

enum PROJECT_PRIVACY {
  PUBLIC
  PRIVATE
  TRIBE
}

input ProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  trackProjectId: ID
  trackProject: ProjectartworkFiletrackProjectProject
  uploaderId: ID
  uploader: ProjectartworkFileuploaderUser
}

input ProjectartworkFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  creatorId: ID
  creator: ProjectartworkFiletrackProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [ProjectartworkFiletrackProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [ProjectartworkFiletrackProjectProjecttracksFile!]
}

input ProjectartworkFiletrackProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectartworkFiletrackProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectartworkFiletrackProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectartworkFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ProjectartworkFileuploaderUsercommentsComment!]
  filesIds: [ID!]
  files: [ProjectartworkFileuploaderUserfilesFile!]
  friendsIds: [ID!]
  friends: [ProjectartworkFileuploaderUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ProjectartworkFileuploaderUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ProjectartworkFileuploaderUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ProjectartworkFileuploaderUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ProjectartworkFileuploaderUsersentRequestsFriendRequest!]
}

input ProjectartworkFileuploaderUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectartworkFileuploaderUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectartworkFileuploaderUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectartworkFileuploaderUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input ProjectartworkFileuploaderUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectartworkFileuploaderUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectartworkFileuploaderUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: ProjectcommentsCommentauthorUser
  parentId: ID
  parent: ProjectcommentsCommentparentComment
  childrenIds: [ID!]
  children: [ProjectcommentsCommentchildrenComment!]
}

input ProjectcommentsCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ProjectcommentsCommentauthorUsercommentsComment!]
  filesIds: [ID!]
  files: [ProjectcommentsCommentauthorUserfilesFile!]
  friendsIds: [ID!]
  friends: [ProjectcommentsCommentauthorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ProjectcommentsCommentauthorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ProjectcommentsCommentauthorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ProjectcommentsCommentauthorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ProjectcommentsCommentauthorUsersentRequestsFriendRequest!]
}

input ProjectcommentsCommentauthorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcommentsCommentauthorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectcommentsCommentauthorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectcommentsCommentauthorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input ProjectcommentsCommentauthorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectcommentsCommentauthorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectcommentsCommentauthorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectcommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: ProjectcommentsCommentchildrenCommentauthorUser
  childrenIds: [ID!]
  children: [ProjectcommentsCommentchildrenCommentchildrenComment!]
}

input ProjectcommentsCommentchildrenCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectcommentsCommentchildrenCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: ProjectcommentsCommentparentCommentauthorUser
  childrenIds: [ID!]
  children: [ProjectcommentsCommentparentCommentchildrenComment!]
}

input ProjectcommentsCommentparentCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectcommentsCommentparentCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

# A connection to a list of items.
type ProjectConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [ProjectEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

input ProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ProjectcreatorUsercommentsComment!]
  filesIds: [ID!]
  files: [ProjectcreatorUserfilesFile!]
  friendsIds: [ID!]
  friends: [ProjectcreatorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ProjectcreatorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ProjectcreatorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ProjectcreatorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ProjectcreatorUsersentRequestsFriendRequest!]
}

input ProjectcreatorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: ProjectcreatorUsercommentsCommentparentComment
  projectId: ID
  project: ProjectcreatorUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [ProjectcreatorUsercommentsCommentchildrenComment!]
}

input ProjectcreatorUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcreatorUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcreatorUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectcreatorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: ProjectcreatorUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: ProjectcreatorUserfilesFiletrackProjectProject
}

input ProjectcreatorUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectcreatorUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectcreatorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ProjectcreatorUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [ProjectcreatorUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [ProjectcreatorUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ProjectcreatorUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ProjectcreatorUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ProjectcreatorUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ProjectcreatorUserfriendsUsersentRequestsFriendRequest!]
}

input ProjectcreatorUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcreatorUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectcreatorUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectcreatorUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input ProjectcreatorUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectcreatorUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjectcreatorUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjectcreatorUserinfluencesInfluence {
  artistId: ID
  artist: ProjectcreatorUserinfluencesInfluenceartistArtist
}

input ProjectcreatorUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input ProjectcreatorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: ProjectcreatorUserinvitationsFriendRequestactorUser
}

input ProjectcreatorUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjectcreatorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: ProjectcreatorUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [ProjectcreatorUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [ProjectcreatorUserprojectsProjecttracksFile!]
}

input ProjectcreatorUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectcreatorUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjectcreatorUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjectcreatorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: ProjectcreatorUsersentRequestsFriendRequestrecipientUser
}

input ProjectcreatorUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

# An edge in a connection.
type ProjectEdge {
  # The item at the end of the edge.
  node: Project!

  # A cursor for use in pagination.
  cursor: String!
}

input ProjectFilter {
  AND: [ProjectFilter!]
  OR: [ProjectFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  new: Boolean
  new_not: Boolean
  privacy: PROJECT_PRIVACY
  privacy_not: PROJECT_PRIVACY
  privacy_in: [PROJECT_PRIVACY!]
  privacy_not_in: [PROJECT_PRIVACY!]
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  artwork: FileFilter
  comments_every: CommentFilter
  comments_some: CommentFilter
  comments_none: CommentFilter
  creator: UserFilter
  tracks_every: FileFilter
  tracks_some: FileFilter
  tracks_none: FileFilter
}

enum ProjectOrderBy {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  new_ASC
  new_DESC
  privacy_ASC
  privacy_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: ProjecttracksFileartworkProjectProject
  uploaderId: ID
  uploader: ProjecttracksFileuploaderUser
}

input ProjecttracksFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  creatorId: ID
  creator: ProjecttracksFileartworkProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [ProjecttracksFileartworkProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [ProjecttracksFileartworkProjectProjecttracksFile!]
}

input ProjecttracksFileartworkProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjecttracksFileartworkProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjecttracksFileartworkProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjecttracksFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [ProjecttracksFileuploaderUsercommentsComment!]
  filesIds: [ID!]
  files: [ProjecttracksFileuploaderUserfilesFile!]
  friendsIds: [ID!]
  friends: [ProjecttracksFileuploaderUserfriendsUser!]
  influencesIds: [ID!]
  influences: [ProjecttracksFileuploaderUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [ProjecttracksFileuploaderUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [ProjecttracksFileuploaderUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [ProjecttracksFileuploaderUsersentRequestsFriendRequest!]
}

input ProjecttracksFileuploaderUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input ProjecttracksFileuploaderUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input ProjecttracksFileuploaderUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input ProjecttracksFileuploaderUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input ProjecttracksFileuploaderUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input ProjecttracksFileuploaderUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input ProjecttracksFileuploaderUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

type Query {
  viewer: Viewer!

  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
}

input RemoveFromArtistInfluenceInfluenceInput {
  artistArtistId: ID!
  influencesInfluenceId: ID!
  clientMutationId: String!
}

type RemoveFromArtistInfluencePayload {
  viewer: Viewer!
  clientMutationId: String!
  influencesInfluence: Influence
  artistArtist: Artist
  influencesInfluenceEdge: InfluenceEdge
  artistArtistEdge: ArtistEdge
}

input RemoveFromCommentParentChildrenCommentInput {
  childrenCommentId: ID!
  parentCommentId: ID!
  clientMutationId: String!
}

type RemoveFromCommentParentChildrenPayload {
  viewer: Viewer!
  clientMutationId: String!
  parentComment: Comment
  childrenComment: Comment
  parentCommentEdge: CommentEdge
  childrenCommentEdge: CommentEdge
}

type RemoveFromFriendsPayload {
  viewer: Viewer!
  clientMutationId: String!
  friends2User: User
  friends1User: User
  friends2UserEdge: UserEdge
  friends1UserEdge: UserEdge
}

input RemoveFromFriendsUserInput {
  friends1UserId: ID!
  friends2UserId: ID!
  clientMutationId: String!
}

input RemoveFromGenreGenreGenreInput {
  subgenresGenreId: ID!
  parentGenreGenreId: ID!
  clientMutationId: String!
}

type RemoveFromGenreGenrePayload {
  viewer: Viewer!
  clientMutationId: String!
  parentGenreGenre: Genre
  subgenresGenre: Genre
  parentGenreGenreEdge: GenreEdge
  subgenresGenreEdge: GenreEdge
}

type RemoveFromProjectCommentsPayload {
  viewer: Viewer!
  clientMutationId: String!
  projectProject: Project
  commentsComment: Comment
  projectProjectEdge: ProjectEdge
  commentsCommentEdge: CommentEdge
}

input RemoveFromProjectCommentsProjectInput {
  commentsCommentId: ID!
  projectProjectId: ID!
  clientMutationId: String!
}

type RemoveFromProjectTracksPayload {
  viewer: Viewer!
  clientMutationId: String!
  trackProjectProject: Project
  tracksFile: File
  trackProjectProjectEdge: ProjectEdge
  tracksFileEdge: FileEdge
}

input RemoveFromProjectTracksProjectInput {
  tracksFileId: ID!
  trackProjectProjectId: ID!
  clientMutationId: String!
}

input RemoveFromUserCommentsCommentInput {
  authorUserId: ID!
  commentsCommentId: ID!
  clientMutationId: String!
}

type RemoveFromUserCommentsPayload {
  viewer: Viewer!
  clientMutationId: String!
  commentsComment: Comment
  authorUser: User
  commentsCommentEdge: CommentEdge
  authorUserEdge: UserEdge
}

input RemoveFromUserFilesFileInput {
  uploaderUserId: ID!
  filesFileId: ID!
  clientMutationId: String!
}

type RemoveFromUserFilesPayload {
  viewer: Viewer!
  clientMutationId: String!
  filesFile: File
  uploaderUser: User
  filesFileEdge: FileEdge
  uploaderUserEdge: UserEdge
}

type RemoveFromUserInfluencesPayload {
  viewer: Viewer!
  clientMutationId: String!
  userUser: User
  influencesInfluence: Influence
  userUserEdge: UserEdge
  influencesInfluenceEdge: InfluenceEdge
}

input RemoveFromUserInfluencesUserInput {
  influencesInfluenceId: ID!
  userUserId: ID!
  clientMutationId: String!
}

type RemoveFromUserInvitationsPayload {
  viewer: Viewer!
  clientMutationId: String!
  recipientUser: User
  invitationsFriendRequest: FriendRequest
  recipientUserEdge: UserEdge
  invitationsFriendRequestEdge: FriendRequestEdge
}

input RemoveFromUserInvitationsUserInput {
  invitationsFriendRequestId: ID!
  recipientUserId: ID!
  clientMutationId: String!
}

type RemoveFromUserProjectsPayload {
  viewer: Viewer!
  clientMutationId: String!
  creatorUser: User
  projectsProject: Project
  creatorUserEdge: UserEdge
  projectsProjectEdge: ProjectEdge
}

input RemoveFromUserProjectsUserInput {
  projectsProjectId: ID!
  creatorUserId: ID!
  clientMutationId: String!
}

type RemoveFromUserRequestsPayload {
  viewer: Viewer!
  clientMutationId: String!
  actorUser: User
  sentRequestsFriendRequest: FriendRequest
  actorUserEdge: UserEdge
  sentRequestsFriendRequestEdge: FriendRequestEdge
}

input RemoveFromUserRequestsUserInput {
  sentRequestsFriendRequestId: ID!
  actorUserId: ID!
  clientMutationId: String!
}

type SetProjectArtPayload {
  viewer: Viewer!
  clientMutationId: String!
  artworkProjectProject: Project
  artworkFile: File
  artworkProjectProjectEdge: ProjectEdge
  artworkFileEdge: FileEdge
}

# If authentication was successful the payload contains the user and a token. If unsuccessful this payload is null.
type SigninPayload {
  token: String
  user: User
  clientMutationId: String
  viewer: Viewer!
}

input SigninUserInput {
  auth0: AUTH_PROVIDER_AUTH0
  clientMutationId: String!
}

input SignupUserInput {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UsercommentsComment!]
  filesIds: [ID!]
  files: [UserfilesFile!]
  friendsIds: [ID!]
  friends: [UserfriendsUser!]
  influencesIds: [ID!]
  influences: [UserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UsersentRequestsFriendRequest!]
  clientMutationId: String!
  authProvider: AuthProviderSignupData!
}

type Tag implements Node {
  createdAt: DateTime
  id: ID!
  updatedAt: DateTime
}

# A connection to a list of items.
type TagConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [TagEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type TagEdge {
  # The item at the end of the edge.
  node: Tag!

  # A cursor for use in pagination.
  cursor: String!
}

input TagFilter {
  AND: [TagFilter!]
  OR: [TagFilter!]
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
}

enum TagOrderBy {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UnsetProjectArtPayload {
  viewer: Viewer!
  clientMutationId: String!
  artworkProjectProject: Project
  artworkFile: File
  artworkProjectProjectEdge: ProjectEdge
  artworkFileEdge: FileEdge
}

input UnsetProjectArtProjectInput {
  artworkFileId: ID!
  artworkProjectProjectId: ID!
  clientMutationId: String!
}

input UpdateArtistInput {
  id: ID!
  imageUrl: String
  name: String
  spotifyId: String
  influencesIds: [ID!]
  influences: [ArtistinfluencesInfluence!]
  clientMutationId: String!
}

type UpdateArtistPayload {
  viewer: Viewer!
  clientMutationId: String!
  artist: Artist
  edge: ArtistEdge
}

input UpdateCommentInput {
  id: ID!
  text: String
  timestampEnd: BigDecimal
  timestampStart: BigDecimal
  authorId: ID
  author: CommentauthorUser
  parentId: ID
  parent: CommentparentComment
  projectId: ID
  project: CommentprojectProject
  childrenIds: [ID!]
  children: [CommentchildrenComment!]
  clientMutationId: String!
}

type UpdateCommentPayload {
  viewer: Viewer!
  clientMutationId: String!
  comment: Comment
  edge: CommentEdge
  author: User
  parent: Comment
  project: Project
}

input UpdateFileInput {
  id: ID!
  name: String
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: FileartworkProjectProject
  trackProjectId: ID
  trackProject: FiletrackProjectProject
  uploaderId: ID
  uploader: FileuploaderUser
  clientMutationId: String!
}

type UpdateFilePayload {
  viewer: Viewer!
  clientMutationId: String!
  file: File
  edge: FileEdge
  artworkProject: Project
  trackProject: Project
  uploader: User
}

input UpdateFriendRequestInput {
  accepted: Boolean
  id: ID!
  ignored: Boolean
  actorId: ID
  actor: FriendRequestactorUser
  recipientId: ID
  recipient: FriendRequestrecipientUser
  clientMutationId: String!
}

type UpdateFriendRequestPayload {
  viewer: Viewer!
  clientMutationId: String!
  friendRequest: FriendRequest
  edge: FriendRequestEdge
  actor: User
  recipient: User
}

input UpdateGenreInput {
  id: ID!
  name: String
  parentGenreIds: [ID!]
  parentGenre: [GenreparentGenreGenre!]
  subgenresIds: [ID!]
  subgenres: [GenresubgenresGenre!]
  clientMutationId: String!
}

type UpdateGenrePayload {
  viewer: Viewer!
  clientMutationId: String!
  genre: Genre
  edge: GenreEdge
}

input UpdateInfluenceInput {
  id: ID!
  artistId: ID
  artist: InfluenceartistArtist
  userId: ID
  user: InfluenceuserUser
  clientMutationId: String!
}

type UpdateInfluencePayload {
  viewer: Viewer!
  clientMutationId: String!
  influence: Influence
  edge: InfluenceEdge
  artist: Artist
  user: User
}

input UpdateProjectInput {
  description: String
  genre: [PROJECT_GENRE!]
  id: ID!
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String
  artworkId: ID
  artwork: ProjectartworkFile
  creatorId: ID
  creator: ProjectcreatorUser
  commentsIds: [ID!]
  comments: [ProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [ProjecttracksFile!]
  clientMutationId: String!
}

type UpdateProjectPayload {
  viewer: Viewer!
  clientMutationId: String!
  project: Project
  edge: ProjectEdge
  artwork: File
  creator: User
}

input UpdateTagInput {
  id: ID!
  clientMutationId: String!
}

type UpdateTagPayload {
  viewer: Viewer!
  clientMutationId: String!
  tag: Tag
  edge: TagEdge
}

input UpdateUserInput {
  email: String
  experience: USER_EXPERIENCE
  handle: String
  id: ID!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UsercommentsComment!]
  filesIds: [ID!]
  files: [UserfilesFile!]
  friendsIds: [ID!]
  friends: [UserfriendsUser!]
  influencesIds: [ID!]
  influences: [UserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UsersentRequestsFriendRequest!]
  clientMutationId: String!
}

type UpdateUserPayload {
  viewer: Viewer!
  clientMutationId: String!
  user: User
  edge: UserEdge
}

type User implements Node {
  auth0UserId: String
  comments(filter: CommentFilter, orderBy: CommentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection
  createdAt: DateTime
  email: String!
  experience: USER_EXPERIENCE
  files(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection
  friends(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection
  handle: String!
  id: ID!
  influences(filter: InfluenceFilter, orderBy: InfluenceOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): InfluenceConnection
  invitations(filter: FriendRequestFilter, orderBy: FriendRequestOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FriendRequestConnection
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  projects(filter: ProjectFilter, orderBy: ProjectOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection
  sentRequests(filter: FriendRequestFilter, orderBy: FriendRequestOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FriendRequestConnection
  summary: String
  updatedAt: DateTime
  website: String
}

enum USER_EXPERIENCE {
  NOVICE
  PROFESSIONAL
}

input UsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: UsercommentsCommentparentComment
  projectId: ID
  project: UsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [UsercommentsCommentchildrenComment!]
}

input UsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  projectId: ID
  project: UsercommentsCommentchildrenCommentprojectProject
  childrenIds: [ID!]
  children: [UsercommentsCommentchildrenCommentchildrenComment!]
}

input UsercommentsCommentchildrenCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UsercommentsCommentchildrenCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  projectId: ID
  project: UsercommentsCommentparentCommentprojectProject
  childrenIds: [ID!]
  children: [UsercommentsCommentparentCommentchildrenComment!]
}

input UsercommentsCommentparentCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UsercommentsCommentparentCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: UsercommentsCommentprojectProjectartworkFile
  creatorId: ID
  creator: UsercommentsCommentprojectProjectcreatorUser
  commentsIds: [ID!]
  comments: [UsercommentsCommentprojectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [UsercommentsCommentprojectProjecttracksFile!]
}

input UsercommentsCommentprojectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UsercommentsCommentprojectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UsercommentsCommentprojectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UsercommentsCommentprojectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

# A connection to a list of items.
type UserConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [UserEdge]

  # Count of filtered result set without considering pagination arguments
  count: Int!
}

# An edge in a connection.
type UserEdge {
  # The item at the end of the edge.
  node: User!

  # A cursor for use in pagination.
  cursor: String!
}

input UserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: UserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: UserfilesFiletrackProjectProject
}

input UserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  creatorId: ID
  creator: UserfilesFileartworkProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [UserfilesFileartworkProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [UserfilesFileartworkProjectProjecttracksFile!]
}

input UserfilesFileartworkProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfilesFileartworkProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserfilesFileartworkProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: UserfilesFiletrackProjectProjectartworkFile
  creatorId: ID
  creator: UserfilesFiletrackProjectProjectcreatorUser
  commentsIds: [ID!]
  comments: [UserfilesFiletrackProjectProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [UserfilesFiletrackProjectProjecttracksFile!]
}

input UserfilesFiletrackProjectProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserfilesFiletrackProjectProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfilesFiletrackProjectProjectcreatorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserfilesFiletrackProjectProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserFilter {
  AND: [UserFilter!]
  OR: [UserFilter!]
  auth0UserId: String
  auth0UserId_not: String
  auth0UserId_in: [String!]
  auth0UserId_not_in: [String!]
  auth0UserId_lt: String
  auth0UserId_lte: String
  auth0UserId_gt: String
  auth0UserId_gte: String
  auth0UserId_contains: String
  auth0UserId_not_contains: String
  auth0UserId_starts_with: String
  auth0UserId_not_starts_with: String
  auth0UserId_ends_with: String
  auth0UserId_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  experience: USER_EXPERIENCE
  experience_not: USER_EXPERIENCE
  experience_in: [USER_EXPERIENCE!]
  experience_not_in: [USER_EXPERIENCE!]
  handle: String
  handle_not: String
  handle_in: [String!]
  handle_not_in: [String!]
  handle_lt: String
  handle_lte: String
  handle_gt: String
  handle_gte: String
  handle_contains: String
  handle_not_contains: String
  handle_starts_with: String
  handle_not_starts_with: String
  handle_ends_with: String
  handle_not_ends_with: String
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  latitude: BigDecimal
  latitude_not: BigDecimal
  latitude_in: [BigDecimal!]
  latitude_not_in: [BigDecimal!]
  latitude_lt: BigDecimal
  latitude_lte: BigDecimal
  latitude_gt: BigDecimal
  latitude_gte: BigDecimal
  longitude: BigDecimal
  longitude_not: BigDecimal
  longitude_in: [BigDecimal!]
  longitude_not_in: [BigDecimal!]
  longitude_lt: BigDecimal
  longitude_lte: BigDecimal
  longitude_gt: BigDecimal
  longitude_gte: BigDecimal
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  placename: String
  placename_not: String
  placename_in: [String!]
  placename_not_in: [String!]
  placename_lt: String
  placename_lte: String
  placename_gt: String
  placename_gte: String
  placename_contains: String
  placename_not_contains: String
  placename_starts_with: String
  placename_not_starts_with: String
  placename_ends_with: String
  placename_not_ends_with: String
  profilePicThumb: String
  profilePicThumb_not: String
  profilePicThumb_in: [String!]
  profilePicThumb_not_in: [String!]
  profilePicThumb_lt: String
  profilePicThumb_lte: String
  profilePicThumb_gt: String
  profilePicThumb_gte: String
  profilePicThumb_contains: String
  profilePicThumb_not_contains: String
  profilePicThumb_starts_with: String
  profilePicThumb_not_starts_with: String
  profilePicThumb_ends_with: String
  profilePicThumb_not_ends_with: String
  profilePicUrl: String
  profilePicUrl_not: String
  profilePicUrl_in: [String!]
  profilePicUrl_not_in: [String!]
  profilePicUrl_lt: String
  profilePicUrl_lte: String
  profilePicUrl_gt: String
  profilePicUrl_gte: String
  profilePicUrl_contains: String
  profilePicUrl_not_contains: String
  profilePicUrl_starts_with: String
  profilePicUrl_not_starts_with: String
  profilePicUrl_ends_with: String
  profilePicUrl_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  website: String
  website_not: String
  website_in: [String!]
  website_not_in: [String!]
  website_lt: String
  website_lte: String
  website_gt: String
  website_gte: String
  website_contains: String
  website_not_contains: String
  website_starts_with: String
  website_not_starts_with: String
  website_ends_with: String
  website_not_ends_with: String
  comments_every: CommentFilter
  comments_some: CommentFilter
  comments_none: CommentFilter
  files_every: FileFilter
  files_some: FileFilter
  files_none: FileFilter
  friends_every: UserFilter
  friends_some: UserFilter
  friends_none: UserFilter
  influences_every: InfluenceFilter
  influences_some: InfluenceFilter
  influences_none: InfluenceFilter
  invitations_every: FriendRequestFilter
  invitations_some: FriendRequestFilter
  invitations_none: FriendRequestFilter
  projects_every: ProjectFilter
  projects_some: ProjectFilter
  projects_none: ProjectFilter
  sentRequests_every: FriendRequestFilter
  sentRequests_some: FriendRequestFilter
  sentRequests_none: FriendRequestFilter
}

input UserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [UserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [UserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [UserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UserfriendsUsersentRequestsFriendRequest!]
}

input UserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  parentId: ID
  parent: UserfriendsUsercommentsCommentparentComment
  projectId: ID
  project: UserfriendsUsercommentsCommentprojectProject
  childrenIds: [ID!]
  children: [UserfriendsUsercommentsCommentchildrenComment!]
}

input UserfriendsUsercommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfriendsUsercommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfriendsUsercommentsCommentprojectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: UserfriendsUserfilesFileartworkProjectProject
  trackProjectId: ID
  trackProject: UserfriendsUserfilesFiletrackProjectProject
}

input UserfriendsUserfilesFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserfriendsUserfilesFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UserfriendsUserfriendsUsercommentsComment!]
  filesIds: [ID!]
  files: [UserfriendsUserfriendsUserfilesFile!]
  friendsIds: [ID!]
  friends: [UserfriendsUserfriendsUserfriendsUser!]
  influencesIds: [ID!]
  influences: [UserfriendsUserfriendsUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UserfriendsUserfriendsUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UserfriendsUserfriendsUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UserfriendsUserfriendsUsersentRequestsFriendRequest!]
}

input UserfriendsUserfriendsUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfriendsUserfriendsUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserfriendsUserfriendsUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserfriendsUserfriendsUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input UserfriendsUserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input UserfriendsUserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserfriendsUserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input UserfriendsUserinfluencesInfluence {
  artistId: ID
  artist: UserfriendsUserinfluencesInfluenceartistArtist
}

input UserfriendsUserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
}

input UserfriendsUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: UserfriendsUserinvitationsFriendRequestactorUser
}

input UserfriendsUserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserfriendsUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: UserfriendsUserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [UserfriendsUserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [UserfriendsUserprojectsProjecttracksFile!]
}

input UserfriendsUserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserfriendsUserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserfriendsUserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserfriendsUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: UserfriendsUsersentRequestsFriendRequestrecipientUser
}

input UserfriendsUsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserinfluencesInfluence {
  artistId: ID
  artist: UserinfluencesInfluenceartistArtist
}

input UserinfluencesInfluenceartistArtist {
  imageUrl: String!
  name: String!
  spotifyId: String!
  influencesIds: [ID!]
  influences: [UserinfluencesInfluenceartistArtistinfluencesInfluence!]
}

input UserinfluencesInfluenceartistArtistinfluencesInfluence {
  artistId: ID
  userId: ID
}

input UserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  actor: UserinvitationsFriendRequestactorUser
}

input UserinvitationsFriendRequestactorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UserinvitationsFriendRequestactorUsercommentsComment!]
  filesIds: [ID!]
  files: [UserinvitationsFriendRequestactorUserfilesFile!]
  friendsIds: [ID!]
  friends: [UserinvitationsFriendRequestactorUserfriendsUser!]
  influencesIds: [ID!]
  influences: [UserinvitationsFriendRequestactorUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UserinvitationsFriendRequestactorUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UserinvitationsFriendRequestactorUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UserinvitationsFriendRequestactorUsersentRequestsFriendRequest!]
}

input UserinvitationsFriendRequestactorUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserinvitationsFriendRequestactorUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UserinvitationsFriendRequestactorUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserinvitationsFriendRequestactorUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input UserinvitationsFriendRequestactorUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input UserinvitationsFriendRequestactorUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserinvitationsFriendRequestactorUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

enum UserOrderBy {
  auth0UserId_ASC
  auth0UserId_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  experience_ASC
  experience_DESC
  handle_ASC
  handle_DESC
  id_ASC
  id_DESC
  latitude_ASC
  latitude_DESC
  longitude_ASC
  longitude_DESC
  name_ASC
  name_DESC
  placename_ASC
  placename_DESC
  profilePicThumb_ASC
  profilePicThumb_DESC
  profilePicUrl_ASC
  profilePicUrl_DESC
  summary_ASC
  summary_DESC
  updatedAt_ASC
  updatedAt_DESC
  website_ASC
  website_DESC
}

input UserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  artwork: UserprojectsProjectartworkFile
  commentsIds: [ID!]
  comments: [UserprojectsProjectcommentsComment!]
  tracksIds: [ID!]
  tracks: [UserprojectsProjecttracksFile!]
}

input UserprojectsProjectartworkFile {
  name: String!
  visualization: [BigDecimal!]
  trackProjectId: ID
  trackProject: UserprojectsProjectartworkFiletrackProjectProject
  uploaderId: ID
  uploader: UserprojectsProjectartworkFileuploaderUser
}

input UserprojectsProjectartworkFiletrackProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserprojectsProjectartworkFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserprojectsProjectcommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  author: UserprojectsProjectcommentsCommentauthorUser
  parentId: ID
  parent: UserprojectsProjectcommentsCommentparentComment
  childrenIds: [ID!]
  children: [UserprojectsProjectcommentsCommentchildrenComment!]
}

input UserprojectsProjectcommentsCommentauthorUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UserprojectsProjectcommentsCommentchildrenComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserprojectsProjectcommentsCommentparentComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UserprojectsProjecttracksFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  artworkProject: UserprojectsProjecttracksFileartworkProjectProject
  uploaderId: ID
  uploader: UserprojectsProjecttracksFileuploaderUser
}

input UserprojectsProjecttracksFileartworkProjectProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UserprojectsProjecttracksFileuploaderUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  recipientId: ID
  recipient: UsersentRequestsFriendRequestrecipientUser
}

input UsersentRequestsFriendRequestrecipientUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  comments: [UsersentRequestsFriendRequestrecipientUsercommentsComment!]
  filesIds: [ID!]
  files: [UsersentRequestsFriendRequestrecipientUserfilesFile!]
  friendsIds: [ID!]
  friends: [UsersentRequestsFriendRequestrecipientUserfriendsUser!]
  influencesIds: [ID!]
  influences: [UsersentRequestsFriendRequestrecipientUserinfluencesInfluence!]
  invitationsIds: [ID!]
  invitations: [UsersentRequestsFriendRequestrecipientUserinvitationsFriendRequest!]
  projectsIds: [ID!]
  projects: [UsersentRequestsFriendRequestrecipientUserprojectsProject!]
  sentRequestsIds: [ID!]
  sentRequests: [UsersentRequestsFriendRequestrecipientUsersentRequestsFriendRequest!]
}

input UsersentRequestsFriendRequestrecipientUsercommentsComment {
  text: String!
  timestampEnd: BigDecimal!
  timestampStart: BigDecimal!
  authorId: ID
  parentId: ID
  projectId: ID
  childrenIds: [ID!]
}

input UsersentRequestsFriendRequestrecipientUserfilesFile {
  name: String!
  visualization: [BigDecimal!]
  artworkProjectId: ID
  trackProjectId: ID
  uploaderId: ID
}

input UsersentRequestsFriendRequestrecipientUserfriendsUser {
  email: String!
  experience: USER_EXPERIENCE
  handle: String!
  latitude: BigDecimal
  longitude: BigDecimal
  name: String
  placename: String
  profilePicThumb: String
  profilePicUrl: String
  summary: String
  website: String
  commentsIds: [ID!]
  filesIds: [ID!]
  friendsIds: [ID!]
  influencesIds: [ID!]
  invitationsIds: [ID!]
  projectsIds: [ID!]
  sentRequestsIds: [ID!]
}

input UsersentRequestsFriendRequestrecipientUserinfluencesInfluence {
  artistId: ID
  userId: ID
}

input UsersentRequestsFriendRequestrecipientUserinvitationsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

input UsersentRequestsFriendRequestrecipientUserprojectsProject {
  description: String
  genre: [PROJECT_GENRE!]
  new: Boolean
  privacy: PROJECT_PRIVACY
  title: String!
  artworkId: ID
  creatorId: ID
  commentsIds: [ID!]
  tracksIds: [ID!]
}

input UsersentRequestsFriendRequestrecipientUsersentRequestsFriendRequest {
  accepted: Boolean
  ignored: Boolean
  actorId: ID
  recipientId: ID
}

# This is the famous Relay viewer object
type Viewer {
  allProjects(filter: ProjectFilter, orderBy: ProjectOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!
  allInfluences(filter: InfluenceFilter, orderBy: InfluenceOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): InfluenceConnection!
  allComments(filter: CommentFilter, orderBy: CommentOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  allUsers(filter: UserFilter, orderBy: UserOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  allFriendRequests(filter: FriendRequestFilter, orderBy: FriendRequestOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FriendRequestConnection!
  allGenres(filter: GenreFilter, orderBy: GenreOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): GenreConnection!
  allArtists(filter: ArtistFilter, orderBy: ArtistOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): ArtistConnection!
  allTags(filter: TagFilter, orderBy: TagOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  allFiles(filter: FileFilter, orderBy: FileOrderBy, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  Project(id: ID): Project
  Influence(id: ID): Influence
  Comment(id: ID): Comment
  User(auth0UserId: String, email: String, handle: String, id: ID): User
  FriendRequest(id: ID): FriendRequest
  Genre(id: ID): Genre
  Artist(id: ID): Artist
  Tag(id: ID): Tag
  File(id: ID, secret: String, url: String): File
  id: ID!
  user: User
}
